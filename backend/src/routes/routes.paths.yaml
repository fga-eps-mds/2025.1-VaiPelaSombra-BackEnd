# User routes OpenAPI paths
/users:
  post:
    summary: Create a new user
    operationId: createUser
    tags:
      - Users
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserInput'
    responses:
      '201':
        description: User created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '400':
        description: Invalid input
      '500':
        description: Server error
  get:
    summary: Get all users
    operationId: getUsers
    tags:
      - Users
    responses:
      '200':
        description: List of users
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      '500':
        description: Server error
/users/{userId}:
  get:
    summary: Get user by ID
    operationId: getUserById
    tags:
      - Users
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: User found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '404':
        description: User not found
      '500':
        description: Server error
  put:
    summary: Update user by ID
    operationId: updateUser
    tags:
      - Users
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserInput'
    responses:
      '200':
        description: User updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '400':
        description: Invalid input
      '404':
        description: User not found
      '500':
        description: Server error
  delete:
    summary: Delete user by ID
    operationId: deleteUser
    tags:
      - Users
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '204':
        description: User deleted
      '404':
        description: User not found
      '500':
        description: Server error

/users/{userId}/preferences:
  get:
    summary: Get travel preference by user ID
    operationId: getTravelPreferenceByUserId
    tags:
      - TravelPreferences
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: Travel preference found
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example: [2, 3]
      '404':
        description: Travel preference not found
      '500':
        description: Server error
  post:
    summary: Create travel preference
    operationId: createTravelPreference
    tags:
      - TravelPreferences
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - travelInterests
            properties:
              userId:
                type: integer
                example: 1
              travelInterests:
                type: array
                items:
                  type: integer
                example: [2, 3]
    responses:
      '201':
        description: Travel preference created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelPreference'
      '400':
        description: Invalid input
      '500':
        description: Server error
  put:
    summary: Update travel preference
    operationId: updateTravelPreference
    tags:
      - TravelPreferences
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - travelInterests
            properties:
              userId:
                type: integer
                example: 1
              travelInterests:
                type: array
                items:
                  type: integer
                example: [2, 3]
    responses:
      '200':
        description: Travel preference updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelPreference'
      '400':
        description: Invalid input
      '404':
        description: Travel preference not found
      '500':
        description: Server error
  delete:
    summary: Delete travel preference
    operationId: deleteTravelPreference
    tags:
      - TravelPreferences
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '204':
        description: Travel preference deleted
      '404':
        description: Travel preference not found
      '500':
        description: Server error

/interests:
  post:
    summary: Create a new travel interest
    operationId: createTravelInterest
    tags:
      - TravelInterests
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - label
            properties:
              label:
                type: string
                example: "Natureza"
    responses:
      '201':
        description: Travel interest created
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  type: string
                  example: "Natureza"
      '400':
        description: Invalid input
      '500':
        description: Server error
  get:
    summary: Get all travel interests
    operationId: getTravelInterests
    tags:
      - TravelInterests
    responses:
      '200':
        description: List of travel interests
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    example: "Natureza"
      '500':
        description: Server error
/interests/{id}:
  get:
    summary: Get travel interest by ID
    operationId: getTravelInterestById
    tags:
      - TravelInterests
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: Travel interest found
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  type: string
                  example: "Natureza"
      '404':
        description: Travel interest not found
      '500':
        description: Server error
  put:
    summary: Update travel interest by ID
    operationId: updateTravelInterest
    tags:
      - TravelInterests
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - label
            properties:
              label:
                type: string
                example: "Natureza"
    responses:
      '200':
        description: Travel interest updated
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  type: string
                  example: "Natureza"
      '400':
        description: Invalid input
      '404':
        description: Travel interest not found
      '500':
        description: Server error
  delete:
    summary: Delete travel interest by ID
    operationId: deleteTravelInterest
    tags:
      - TravelInterests
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      '204':
        description: Travel interest deleted
      '404':
        description: Travel interest not found
      '500':
        description: Server error
/users/{userId}/itineraries:
  post:
    summary: Create itinerary for user
    operationId: createItinerary
    tags:
      - Itineraries
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - startDate
              - endDate
              - itineraryStatus
            properties:
              title:
                type: string
                example: "Viagem para o Rio"
              startDate:
                type: string
                format: date-time
                example: "2025-07-01T09:00:00.000Z"
              endDate:
                type: string
                format: date-time
                example: "2025-07-10T18:00:00.000Z"
              itineraryStatus:
                type: string
                enum: [PLANNING, IN_PROGRESS, COMPLETED]
                example: "PLANNING"
              foodBudget:
                type: number
                format: float
                example: 500.00
              lodgingBudget:
                type: number
                format: float
                example: 1200.00
              totalBudget:
                type: number
                format: float
                example: 2000.00
              userIds:
                type: array
                items:
                  type: integer
                example: [1, 2]
              transportIds:
                type: array
                items:
                  type: integer
                example: [1]
              activityIds:
                type: array
                items:
                  type: integer
                example: [1, 2]
              destinationIds:
                type: array
                items:
                  type: integer
                example: [1]
              requiredDocumentIds:
                type: array
                items:
                  type: integer
                example: [1, 2]
    responses:
      '201':
        description: Itinerary created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Itinerary'
      '400':
        description: Invalid input
      '500':
        description: Server error
  get:
    summary: Get all itineraries for user
    operationId: findByUserId
    tags:
      - Itineraries
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: List of itineraries
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - title
                  - startDate
                  - endDate
                  - itineraryStatus
                properties:
                  title:
                    type: string
                    example: "Viagem para o Rio"
                  startDate:
                    type: string
                    format: date-time
                    example: "2025-07-01T09:00:00.000Z"
                  endDate:
                    type: string
                    format: date-time
                    example: "2025-07-10T18:00:00.000Z"
                  itineraryStatus:
                    type: string
                    enum: [PLANNING, IN_PROGRESS, COMPLETED]
                    example: "PLANNING"
                  foodBudget:
                    type: number
                    format: float
                    example: 500.00
                  lodgingBudget:
                    type: number
                    format: float
                    example: 1200.00
                  totalBudget:
                    type: number
                    format: float
                    example: 2000.00
                  userIds:
                    type: array
                    items:
                      type: integer
                    example: [1, 2]
                  transportIds:
                    type: array
                    items:
                      type: integer
                    example: [1]
                  activityIds:
                    type: array
                    items:
                      type: integer
                    example: [1, 2]
                  destinationIds:
                    type: array
                    items:
                      type: integer
                    example: [1]
                  requiredDocumentIds:
                    type: array
                    items:
                      type: integer
                    example: [1, 2]
      '500':
        description: Server error
/users/{userId}/itineraries/{itineraryId}:
  # get:
  #   summary: Get itinerary by user and itinerary ID
  #   operationId: findByUserItineraryId
  #   tags:
  #     - Itineraries
  #   parameters:
  #     - name: userId
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #     - name: itineraryId
  #       in: path
  #       required: true
  #       schema:
  #         type: integer
  #   responses:
  #     '200':
  #       description: Itinerary found
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Itinerary'
  #     '404':
  #       description: Itinerary not found
  #     '500':
  #       description: Server error
  put:
    summary: Update itinerary by ID
    operationId: updateItinerary
    tags:
      - Itineraries
    parameters:
      - name: itineraryId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateItineraryInput'
    responses:
      '200':
        description: Itinerary updated
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - startDate
                - endDate
                - itineraryStatus
              properties:
                title:
                  type: string
                  example: "Viagem para o Rio"
                startDate:
                  type: string
                  format: date-time
                  example: "2025-07-01T09:00:00.000Z"
                endDate:
                  type: string
                  format: date-time
                  example: "2025-07-10T18:00:00.000Z"
                itineraryStatus:
                  type: string
                  enum: [PLANNING, IN_PROGRESS, COMPLETED]
                  example: "PLANNING"
                foodBudget:
                  type: number
                  format: float
                  example: 500.00
                lodgingBudget:
                  type: number
                  format: float
                  example: 1200.00
                totalBudget:
                  type: number
                  format: float
                  example: 2000.00
                userIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2]
                transportIds:
                  type: array
                  items:
                    type: integer
                  example: [1]
                activityIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2]
                destinationIds:
                  type: array
                  items:
                    type: integer
                  example: [1]
                requiredDocumentIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2]
      '400':
        description: Invalid input
      '404':
        description: Itinerary not found
      '500':
        description: Server error
  delete:
    summary: Delete itinerary by ID
    operationId: deleteItinerary
    tags:
      - Itineraries
    parameters:
      - name: itineraryId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '204':
        description: Itinerary deleted
      '404':
        description: Itinerary not found
      '500':
        description: Server error
users/{userId}/itineraries/{itineraryId}/activities:
  post:
    summary: Create activity for itinerary
    operationId: createActivity
    tags:
      - Activities
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: itineraryId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - location
              - startTime
              - endTime
            properties:
              title:
                type: string
                example: "Passeio de barco"
              location:
                type: string
                example: "Rio de Janeiro"
              startTime:
                type: string
                format: date-time
                example: "2025-07-02T09:00:00.000Z"
              endTime:
                type: string
                format: date-time
                example: "2025-07-02T12:00:00.000Z"
              price:
                type: number
                format: float
                example: 150.00
              duration:
                type: string
                example: "3h"
              description:
                type: string
                example: "Passeio de barco pela orla."
              destinationId:
                type: integer
                example: 1
    responses:
      '201':
        description: Activity created
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - title
                - location
                - startTime
                - endTime
              properties:
                id:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: "Passeio de barco"
                location:
                  type: string
                  example: "Rio de Janeiro"
                startTime:
                  type: string
                  format: date-time
                  example: "2025-07-02T09:00:00.000Z"
                endTime:
                  type: string
                  format: date-time
                  example: "2025-07-02T12:00:00.000Z"
                price:
                  type: number
                  format: float
                  example: 150.00
                duration:
                  type: string
                  example: "3h"
                description:
                  type: string
                  example: "Passeio de barco pela orla."
                destinationId:
                  type: integer
                  example: 1
      '400':
        description: Invalid input
      '404':
        description: Itinerary not found
      '500':
        description: Server error
  get:
    summary: Get all activities for itinerary
    operationId: getActivitiesByItineraryId
    tags:
      - Activities
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: itineraryId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '200':
        description: List of activities
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - id
                  - title
                  - location
                  - startTime
                  - endTime
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Passeio de barco"
                  location:
                    type: string
                    example: "Rio de Janeiro"
                  startTime:
                    type: string
                    format: date-time
                    example: "2025-07-02T09:00:00.000Z"
                  endTime:
                    type: string
                    format: date-time
                    example: "2025-07-02T12:00:00.000Z"
                  price:
                    type: number
                    format: float
                    example: 150.00
                  duration:
                    type: string
                    example: "3h"
                  description:
                    type: string
                    example: "Passeio de barco pela orla."
                  destinationId:
                    type: integer
                    example: 1
      '404':
        description: Itinerary not found
      '500':
        description: Server error
/users/{userId}/itineraries/{itineraryId}/activities/{activityId}:
  put:
    summary: Update activity by ID
    operationId: updateActivity
    tags:
      - Activities
    parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - location
              - startTime
              - endTime
            properties:
              title:
                type: string
                example: "Passeio de barco"
              location:
                type: string
                example: "Rio de Janeiro"
              startTime:
                type: string
                format: date-time
                example: "2025-07-02T09:00:00.000Z"
              endTime:
                type: string
                format: date-time
                example: "2025-07-02T12:00:00.000Z"
              price:
                type: number
                format: float
                example: 150.00
              duration:
                type: string
                example: "3h"
              description:
                type: string
                example: "Passeio de barco pela orla."
              destinationId:
                type: integer
                example: 1
    responses:
      '200':
        description: Activity updated
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - title
                - location
                - startTime
                - endTime
              properties:
                id:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: "Passeio de barco"
                location:
                  type: string
                  example: "Rio de Janeiro"
                startTime:
                  type: string
                  format: date-time
                  example: "2025-07-02T09:00:00.000Z"
                endTime:
                  type: string
                  format: date-time
                  example: "2025-07-02T12:00:00.000Z"
                price:
                  type: number
                  format: float
                  example: 150.00
                duration:
                  type: string
                  example: "3h"
                description:
                  type: string
                  example: "Passeio de barco pela orla."
                destinationId:
                  type: integer
                  example: 1
      '400':
        description: Invalid input
      '404':
        description: Activity not found
      '500':
        description: Server error
  delete:
    summary: Delete activity by ID
    operationId: deleteActivity
    tags:
      - Activities
    parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: integer
    responses:
      '204':
        description: Activity deleted
      '404':
        description: Activity not found
      '500':
        description: Server error