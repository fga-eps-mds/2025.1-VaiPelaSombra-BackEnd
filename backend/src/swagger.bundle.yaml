openapi: 3.0.0
info:
  title: VaiPelaSombra API
  version: 1.0.0
  description: API documentation for VaiPelaSombra Backend
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error

  /users/{userId}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error
    put:
      summary: Update user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      summary: Delete user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Server error

  /users/{userId}/travel-preferences:
    get:
      summary: Get travel preference by user ID
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel preference found
          content:
            application/json:
              schema:
                type: object
                required:
                  - userId
                  - travelInterests
                properties:
                  userId:
                    type: integer
                    example: 1
                  travelInterests:
                    type: array
                    items:
                      type: integer
                    example:
                      - 2
                      - 3
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    post:
      summary: Create travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example:
                  - 2
                  - 3
      responses:
        '201':
          description: Travel preference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '500':
          description: Server error
    put:
      summary: Update travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example:
                  - 2
                  - 3
      responses:
        '200':
          description: Travel preference updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    delete:
      summary: Delete travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel preference deleted
        '404':
          description: Travel preference not found
        '500':
          description: Server error

  /users/{userId}/itineraries:
    post:
      summary: Create itinerary for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - startDate
                - endDate
                - itineraryStatus
              properties:
                title:
                  type: string
                  example: Viagem para o Rio
                startDate:
                  type: string
                  format: date-time
                  example: '2025-07-01T09:00:00.000Z'
                endDate:
                  type: string
                  format: date-time
                  example: '2025-07-10T18:00:00.000Z'
                itineraryStatus:
                  type: string
                  enum:
                  - PLANNING
                  - IN_PROGRESS
                  - COMPLETED
                  example: PLANNING
                foodBudget:
                  type: number
                  format: float
                  example: 500
                lodgingBudget:
                  type: number
                  format: float
                  example: 1200
                totalBudget:
                  type: number
                  format: float
                  example: 2000
                userIds:
                  type: array
                  items:
                    type: integer
                  example:
                  - 1
                  - 2
                transportIds:
                  type: array
                  items:
                    type: integer
                  example:
                  - 1
                activityIds:
                  type: array
                  items:
                    type: integer
                  example:
                  - 1
                  - 2
                destinationIds:
                  type: array
                  items:
                    type: integer
                  example:
                  - 1
                requiredDocumentIds:
                  type: array
                  items:
                    type: integer
                  example:
                  - 1
                  - 2
      responses:
        '201':
          description: Itinerary created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all itineraries for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of itineraries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Itinerary'
        '500':
          description: Server error

  /users/{userId}/itineraries/{itineraryId}:
    put:
      summary: Update itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItineraryInput'
      responses:
        '200':
          description: Itinerary updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - title
                  - startDate
                  - endDate
                  - itineraryStatus
                properties:
                  title:
                    type: string
                    example: Viagem para o Rio
                  startDate:
                    type: string
                    format: date-time
                    example: '2025-07-01T09:00:00.000Z'
                  endDate:
                    type: string
                    format: date-time
                    example: '2025-07-10T18:00:00.000Z'
                  itineraryStatus:
                    type: string
                    enum:
                    - PLANNING
                    - IN_PROGRESS
                    - COMPLETED
                    example: PLANNING
                  foodBudget:
                    type: number
                    format: float
                    example: 500
                  lodgingBudget:
                    type: number
                    format: float
                    example: 1200
                  totalBudget:
                    type: number
                    format: float
                    example: 2000
                  userIds:
                    type: array
                    items:
                      type: integer
                    example:
                    - 1
                    - 2
                  transportIds:
                    type: array
                    items:
                      type: integer
                    example:
                    - 1
                  activityIds:
                    type: array
                    items:
                      type: integer
                    example:
                    - 1
                    - 2
                  destinationIds:
                    type: array
                    items:
                      type: integer
                    example:
                    - 1
                  requiredDocumentIds:
                    type: array
                    items:
                      type: integer
                    example:
                    - 1
                    - 2
        '400':
          description: Invalid input
        '404':
          description: Itinerary not found
        '500':
          description: Server error
    delete:
      summary: Delete itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Itinerary deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '404':
          description: Itinerary not found
        '500':
          description: Server error

  /users/{userId}/itineraries/{itineraryId}/activities:
    get:
      summary: Get all activities for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error
    post:
      summary: Create a new activity for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityInput'
      responses:
        '201':
          description: Activity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error

  /users/{userId}/itineraries/{itineraryId}/activities/{activityId}:
    put:
      summary: Update an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityInput'
      responses:
        '200':
          description: Activity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '404':
          description: Activity not found
        '500':
          description: Server error
    delete:
      summary: Delete an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Activity deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '404':
          description: Activity not found
        '500':
          description: Server error

  /travel-interests:
    get:
      summary: Get all travel interests
      tags:
        - TravelInterests
      responses:
        '200':
          description: List of travel interests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelInterest'
        '500':
          description: Server error
    post:
      summary: Create a new travel interest
      tags:
        - TravelInterests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelInterestInput'
      responses:
        '201':
          description: Travel interest created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '500':
          description: Server error

  /travel-interests/{id}:
    get:
      summary: Get travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel interest found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    put:
      summary: Update travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTravelInterestInput'
      responses:
        '200':
          description: Travel interest updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    delete:
      summary: Delete travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel interest deleted
        '404':
          description: Travel interest not found
        '500':
          description: Server error

  /itineraries/{itineraryId}/transports:
    get:
      tags:
        - Transports
      summary: Get all transports for a given itinerary
      operationId: getTransportsByItinerary
      parameters:
        - name: itineraryId
          in: path
          required: true
          description: ID of the itinerary to fetch transports for
          schema:
            type: integer
      responses:
        '200':
          description: A list of transports for the itinerary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transport'
    post:
      tags:
        - Transports
      summary: Create a new transport for an itinerary
      operationId: createTransport
      parameters:
        - name: itineraryId
          in: path
          required: true
          description: ID of the itinerary to associate the transport with
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransportInput'
      responses:
        '201':
          description: Transport created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transport'

  /transport/{id}:
    get:
      tags:
        - Transports
      summary: Get transport by ID
      operationId: getTransportById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transport
          schema:
            type: integer
      responses:
        '200':
          description: Transport found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transport'
        '404':
          description: Transport not found
    put:
      tags:
        - Transports
      summary: Update transport by ID
      operationId: updateTransport
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transport to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransportInput'
      responses:
        '200':
          description: Transport updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transport'
        '404':
          description: Transport not found
    delete:
      tags:
        - Transports
      summary: Delete transport by ID
      operationId: deleteTransport
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transport to delete
          schema:
            type: integer
      responses:
        '204':
          description: Transport deleted successfully
        '404':
          description: Transport not found
        '500':
          description: Server error

  /auth/login:
    post:
      summary: Authenticate user
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: joao@email.com
                password:
                  description: password to login
                  type: string
                  example: S3NH@SEGURS
      responses:
        '200':
          description: Successfully logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: jxaslcbhdjhasijis
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      email:
                        type: string
                        example: joao@email.com

components:
  schemas:
    CreateUserInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        profileBio:
          type: string
          nullable: true
        profileImage:
          type: string
          nullable: true
          format: uri
          example: https://example.com/profile.jpg

    PlanoViagem:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image:
          type: string
        date:
          type: string
          format: date-time
        daysLeft:
          type: integer
        faded:
          type: boolean
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'

    UpdateUserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        profileBio:
          type: string
        profileImage:
          type: string
          format: uri

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        profileBio:
          type: string
        profileImage:
          type: string
          format: uri

    CreateTravelPreferenceInput:
      type: object
      required:
        - userId
        - transport
        - accommodation
        - activities
      properties:
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    UpdateTravelPreferenceInput:
      type: object
      properties:
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    TravelPreference:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    CreateItineraryInput:
      type: object
      required:
        - title
        - startDate
        - endDate
        - itineraryStatus
      properties:
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
          enum:
            - PLANNING
            - IN_PROGRESS
            - COMPLETED
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer

    UpdateItineraryInput:
      type: object
      properties:
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
          enum:
            - PLANNING
            - IN_PROGRESS
            - COMPLETED
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer

    Itinerary:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer

    CreateActivityInput:
      type: object
      required:
        - location
        - title
        - price
        - startTime
        - endTime
        - itineraryId
      properties:
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string
        itineraryId:
          type: integer

    UpdateActivityInput:
      type: object
      properties:
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string

    Activity:
      type: object
      properties:
        id:
          type: integer
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string
        itineraryId:
          type: integer

    CreateTravelInterestInput:
      type: object
      required:
        - label
      properties:
        label:
          type: string

    UpdateTravelInterestInput:
      type: object
      properties:
        label:
          type: string

    TravelInterest:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string

    CreateTransportInput:
      type: object
      required:
        - type
        - cost
        - itineraryId
      properties:
        type:
          type: string
          example: Airplane
        cost:
          type: number
          format: float
          example: 1234.56
        departure:
          type: string
          format: date-time
          example: '2025-08-01T08:00:00Z'
          nullable: true
        arrival:
          type: string
          format: date-time
          example: '2025-08-01T12:00:00Z'
          nullable: true
        duration:
          type: string
          example: 4h
          nullable: true
        description:
          type: string
          example: Direct flight to destination
          nullable: true
        itineraryId:
          type: integer

    UpdateTransportInput:
      type: object
      properties:
        type:
          type: string
          example: Bus
        cost:
          type: number
          format: float
          example: 250
        departure:
          type: string
          format: date-time
          example: '2025-08-03T07:00:00Z'
          nullable: true
        arrival:
          type: string
          format: date-time
          example: '2025-08-03T13:00:00Z'
          nullable: true
        duration:
          type: string
          example: 6h
          nullable: true
        description:
          type: string
          example: Bus trip with stops
          nullable: true
        itineraryId:
          type: integer
          nullable: true

    Transport:
      type: object
      properties:
        id:
          type: integer
          example: 5
        type:
          type: string
          example: Airplane
        cost:
          type: number
          format: float
          example: 1234.56
        departure:
          type: string
          format: date-time
          example: '2025-08-01T08:00:00Z'
          nullable: true
        arrival:
          type: string
          format: date-time
          example: '2025-08-01T12:00:00Z'
          nullable: true
        duration:
          type: string
          example: 4h
          nullable: true
        description:
          type: string
          example: Direct flight to destination
          nullable: true
        itineraryId:
          type: integer
          example: 1
