openapi: 3.0.0
info:
  title: VaiPelaSombra API
  version: 1.0.0
  description: API documentation for VaiPelaSombra Backend
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all users
      operationId: getUsers
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
  /users/{userId}:
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error
    put:
      summary: Update user by ID
      operationId: updateUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      summary: Delete user by ID
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Server error
  /travel-preferences/{userId}:
    get:
      summary: Get travel preference by user ID
      operationId: getTravelPreferenceByUserId
      tags:
        - TravelPreferences
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel preference found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    post:
      summary: Create travel preference
      operationId: createTravelPreference
      tags:
        - TravelPreferences
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelPreferenceInput'
      responses:
        '201':
          description: Travel preference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '500':
          description: Server error
    put:
      summary: Update travel preference
      operationId: updateTravelPreference
      tags:
        - TravelPreferences
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTravelPreferenceInput'
      responses:
        '200':
          description: Travel preference updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    delete:
      summary: Delete travel preference
      operationId: deleteTravelPreference
      tags:
        - TravelPreferences
      parameters:
        - name: preferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel preference deleted
        '404':
          description: Travel preference not found
        '500':
          description: Server error
  /travel-interests:
    post:
      summary: Create a new travel interest
      operationId: createTravelInterest
      tags:
        - TravelInterests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelInterestInput'
      responses:
        '201':
          description: Travel interest created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all travel interests
      operationId: getTravelInterests
      tags:
        - TravelInterests
      responses:
        '200':
          description: List of travel interests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelInterest'
        '500':
          description: Server error
  /travel-interests/{id}:
    get:
      summary: Get travel interest by ID
      operationId: getTravelInterestById
      tags:
        - TravelInterests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel interest found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    put:
      summary: Update travel interest by ID
      operationId: updateTravelInterest
      tags:
        - TravelInterests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTravelInterestInput'
      responses:
        '200':
          description: Travel interest updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    delete:
      summary: Delete travel interest by ID
      operationId: deleteTravelInterest
      tags:
        - TravelInterests
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel interest deleted
        '404':
          description: Travel interest not found
        '500':
          description: Server error
  /itineraries/{userId}:
    post:
      summary: Create itinerary for user
      operationId: createItinerary
      tags:
        - Itineraries
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItineraryInput'
      responses:
        '201':
          description: Itinerary created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all itineraries for user
      operationId: findByUserId
      tags:
        - Itineraries
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of itineraries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Itinerary'
        '500':
          description: Server error
  /itineraries/{userId}/{itineraryId}:
    get:
      summary: Get itinerary by user and itinerary ID
      operationId: findByUserItineraryId
      tags:
        - Itineraries
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: itineraryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Itinerary found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '404':
          description: Itinerary not found
        '500':
          description: Server error
  /itineraries/{itineraryId}:
    put:
      summary: Update itinerary by ID
      operationId: updateItinerary
      tags:
        - Itineraries
      parameters:
        - name: itineraryId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItineraryInput'
      responses:
        '200':
          description: Itinerary updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid input
        '404':
          description: Itinerary not found
        '500':
          description: Server error
    delete:
      summary: Delete itinerary by ID
      operationId: deleteItinerary
      tags:
        - Itineraries
      parameters:
        - name: itineraryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Itinerary deleted
        '404':
          description: Itinerary not found
        '500':
          description: Server error
components:
  schemas:
    CreateUserInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: João Silva
        email:
          type: string
          format: email
          example: joao@email.com
        password:
          type: string
          description: Password must be hashed before sending to the service
          example: hashed_password
        profileBio:
          type: string
          nullable: true
          example: Apaixonado por viagens e aventuras.
        profileImage:
          type: string
          nullable: true
          example: https://example.com/profile.jpg
    PlanoViagem:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image:
          type: string
        date:
          type: string
          format: date-time
        daysLeft:
          type: integer
        faded:
          type: boolean
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
