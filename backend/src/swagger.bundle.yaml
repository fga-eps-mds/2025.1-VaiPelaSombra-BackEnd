openapi: 3.0.0
info:
  title: VaiPelaSombra API
  version: 1.0.0
  description: API documentation for VaiPelaSombra Backend
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
    get:
      summary: Retrieve a list of users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
<<<<<<< HEAD
                $ref: '#/components/schemas/User'
<<<<<<< HEAD
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all users
      tags:
        - Users
=======
                $ref: '#/components/schemas/CreateUserInput'
  /users/{id}:
    get:
      summary: Retrieve a single user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserInput'
    put:
      summary: Update an existing user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserInput'
      responses:
        '200':
          description: The user was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserInput'
    delete:
      summary: Delete a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: The user was successfully deleted
  /users/{id}/preferences:
    get:
      summary: Retrieve travel preferences for a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: Travel preferences for the user
    post:
      summary: Save or update a user's travel preferences
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                travelPreferences:
                  type: object
                  properties:
                    travelerType:
                      type: string
                      enum:
                        - AVENTUREIRO
                        - CULTURAL
                        - RELAXAMENTO
                        - GASTRONOMICO
                      example: AVENTUREIRO
                    travelFrequency:
                      type: string
                      enum:
                        - BIMESTRAL
                        - TRIMESTRAL
                        - SEMESTRAL
                        - ANUAL
                      example: ANUAL
                    averageBudget:
                      type: number
                      example: 0
      responses:
        '200':
          description: Preferences saved successfully
    put:
      summary: Update a user's travel preferences
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                travelPreferences:
                  type: object
                  properties:
                    travelerType:
                      type: string
                      enum:
                        - AVENTUREIRO
                        - CULTURAL
                        - RELAXAMENTO
                        - GASTRONOMICO
                      example: RELAXAMENTO
                    travelFrequency:
                      type: string
                      enum:
                        - BIMESTRAL
                        - TRIMESTRAL
                        - SEMESTRAL
                        - ANUAL
                      example: SEMESTRAL
                    averageBudget:
                      type: number
                      example: 3500
      responses:
        '200':
          description: Preferences updated successfully
        '400':
          description: Invalid input
        '404':
          description: Preferences not found
  /users/{id}/interests:
    get:
      summary: Get travel interests selected by a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
<<<<<<< HEAD
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
          example: 1
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      responses:
        '200':
          description: List of users
=======
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
<<<<<<< HEAD
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
  /users/{userId}:
    get:
      summary: Get user by ID
      tags:
        - Users
=======
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 2
                    name:
                      type: string
                      example: CULTURAL
        '404':
          description: Preferences not found
    post:
      summary: Save travel interests for a user (first-time setup)
<<<<<<< HEAD
      tags: [Users]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
<<<<<<< HEAD
=======
=======
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                travelInterestsIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 3
                    - 4
      responses:
        '201':
          description: Interests saved successfully
        '400':
          description: No interests selected
    put:
      summary: Update travel interests for a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                travelInterestsIds:
                  type: array
                  items:
                    type: integer
<<<<<<< HEAD
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
                  example:
                    - 2
                    - 4
                    - 5
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
<<<<<<< HEAD
          description: User not found
        '500':
          description: Server error
    put:
<<<<<<< HEAD
      summary: Update user by ID
      tags:
        - TravelPreferences
=======
      summary: Update travel interests for a user
      tags: [Users]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserInput'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      summary: Delete user by ID
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Server error
  /users/{userId}/travel-preferences:
    get:
      summary: Get travel preference by user ID
      tags:
        - TravelPreferences
=======
          description: Preferences not found
  /planoViagem/{userId}:
    get:
      summary: Retorna todos os planos de viagem de um usuário
      tags:
        - PlanoViagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do usuário
      responses:
        '200':
          description: Travel preference found
          content:
            application/json:
              schema:
                type: object
                required:
                  - userId
                  - travelInterests
                properties:
                  userId:
                    type: integer
                    example: 1
                  travelInterests:
                    type: array
                    items:
                      type: integer
                    example:
                      - 2
                      - 3
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    post:
      summary: Create travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
<<<<<<< HEAD
                  example:
                    - 2
                    - 3
=======
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      responses:
        '201':
          description: Travel preference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
<<<<<<< HEAD
          description: Invalid input
        '500':
          description: Server error
    put:
      summary: Update travel preference for user
      tags:
        - TravelPreferences
=======
          description: No interests selected
        '404':
          description: Preferences not found

  /planoViagem/{userId}:
    get:
      summary: Retorna todos os planos de viagem de um usuário
      tags: [PlanoViagem]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
<<<<<<< HEAD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example:
                    - 2
                    - 3
=======
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      responses:
        '200':
          description: Travel preference updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    delete:
      summary: Delete travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel preference deleted
        '404':
          description: Travel preference not found
        '500':
          description: Server error
<<<<<<< HEAD
  /interests:
    post:
      summary: Create a new travel interest
      operationId: createTravelInterest
      tags:
        - TravelInterests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  type: string
                  example: Natureza
      responses:
        '201':
          description: Travel interest created
          content:
            application/json:
              schema:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    example: Natureza
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all travel interests
      operationId: getTravelInterests
      tags:
        - TravelInterests
      responses:
        '200':
          description: List of travel interests
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
          content:
            application/json:
              schema:
                type: array
                items:
<<<<<<< HEAD
<<<<<<< HEAD
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
  /users/{userId}:
    get:
      summary: Get user by ID
=======
                  $ref: '#/components/schemas/TravelInterest'
        '500':
          description: Server error
  /travel-interests/{id}:
    get:
      summary: Get travel interest by ID
      operationId: getTravelInterestById
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
      tags:
        - TravelInterests
=======
                  $ref: '#/components/schemas/PlanoViagem'
        '404':
          description: Usuário não encontrado
    post:
      summary: Cria um novo plano de viagem
      tags:
        - PlanoViagem
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do usuário
  /login:
    post:
      summary: Authenticate user
<<<<<<< HEAD
=======
      tags:
        - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: joao@email.com
                password:
                  description: password to login
                  type: string
                  example: S3NH@SEGURS
      responses:
        '200':
          description: sucessfly loggged
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: jxaslcbhdjhasijis
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      email:
                        type: string
                        example: joao@email.com
        '201':
          description: Plano de viagem criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanoViagem'
        '400':
          description: Dados inválidos
  /planoViagem/{userId}/{id}:
    get:
      summary: Retorna um plano de viagem específico
      tags:
        - PlanoViagem
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do usuário
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do plano de viagem
      responses:
        '200':
          description: Detalhes do plano de viagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanoViagem'
        '404':
          description: Plano de viagem não encontrado
    put:
      summary: Atualiza um plano de viagem existente
      tags:
        - PlanoViagem
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do usuário
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do plano de viagem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Nome do plano de viagem
                destino:
                  type: string
                  nullable: true
                  description: Destino da viagem
                dataInicio:
                  type: string
                  format: date-time
                  nullable: true
                  description: Data de início da viagem
                dataFim:
                  type: string
                  format: date-time
                  nullable: true
                  description: Data de término da viagem
              required:
                - nome
      responses:
        '200':
          description: Plano de viagem atualizado com sucesso
        '404':
          description: Plano de viagem não encontrado
    delete:
      summary: Exclui um plano de viagem
      tags:
        - PlanoViagem
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do usuário
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID do plano de viagem
      responses:
        '200':
          description: Plano de viagem excluído com sucesso
        '404':
          description: Plano de viagem não encontrado
  /users/me:
    get:
      summary: Get authenticated user's profile
>>>>>>> 90cb735086943d13bbbc35ca27617ddb4aa18211
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Authenticated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    put:
      summary: Update authenticated user's profile
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                profileBio:
                  type: string
                profileImage:
                  type: string
                travelPreferencesData:
                  type: object
                  properties:
                    travelerType:
                      type: string
                    travelFrequency:
                      type: string
                    averageBudget:
                      type: number
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
<<<<<<< HEAD
                type: object
                properties:
                  token:
                    type: string
                    example: jxaslcbhdjhasijis
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 1
                      email:
                        type: string
                        example: joao@email.com
        '201':
          description: Plano de viagem criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanoViagem'
        '400':
          description: Dados inválidos
  /planoViagem/{userId}/{id}:
    get:
      summary: Retorna um plano de viagem específico
<<<<<<< HEAD
      tags: [PlanoViagem]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
      tags:
        - PlanoViagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      parameters:
<<<<<<< HEAD
        - in: path
          name: userId
          required: true
          schema:
            type: integer
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
          description: ID do usuário
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
        - in: path
          name: id
          required: true
          schema:
            type: integer
<<<<<<< HEAD
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
          description: ID do plano de viagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Server error
    put:
<<<<<<< HEAD
      summary: Update user by ID
      tags:
        - Users
=======
      summary: Atualiza um plano de viagem existente
<<<<<<< HEAD
      tags: [PlanoViagem]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
      tags:
        - PlanoViagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
          description: ID do usuário
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
        - in: path
          name: id
          required: true
          schema:
            type: integer
<<<<<<< HEAD
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
          description: ID do plano de viagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      requestBody:
        required: true
        content:
          application/json:
            schema:
<<<<<<< HEAD
              $ref: '#/components/schemas/UpdateUserInput'
=======
              type: object
              properties:
                nome:
                  type: string
                  description: Nome do plano de viagem
                destino:
                  type: string
                  nullable: true
                  description: Destino da viagem
                dataInicio:
                  type: string
                  format: date-time
                  nullable: true
                  description: Data de início da viagem
                dataFim:
                  type: string
                  format: date-time
                  nullable: true
<<<<<<< HEAD
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
                  description: Data de término da viagem
              required:
                - nome
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
<<<<<<< HEAD
      summary: Delete user by ID
      tags:
        - TravelPreferences
=======
      summary: Exclui um plano de viagem
<<<<<<< HEAD
      tags: [PlanoViagem]
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
      tags:
        - PlanoViagem
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
<<<<<<< HEAD
<<<<<<< HEAD
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Server error
  /users/{userId}/travel-preferences:
    get:
      summary: Get travel preference by user ID
      tags:
        - TravelPreferences
      parameters:
=======
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
          description: ID do usuário
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID do plano de viagem
      responses:
        '200':
<<<<<<< HEAD
          description: Travel preference found
=======
          description: Plano de viagem excluído com sucesso
        '404':
          description: Plano de viagem não encontrado
  /users/me:
    get:
      summary: Get authenticated user's profile
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Authenticated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
    put:
      summary: Update authenticated user's profile
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                profileBio:
                  type: string
                profileImage:
                  type: string
                travelPreferencesData:
                  type: object
                  properties:
                    travelerType:
                      type: string
                    travelFrequency:
                      type: string
                    averageBudget:
                      type: number
      responses:
        '200':
<<<<<<< HEAD
          description: Successfully logged in
>>>>>>> 8ce8bcc (Implementação a US48 backend)
          content:
            application/json:
              schema:
                type: object
                required:
                  - userId
                  - travelInterests
                properties:
                  userId:
                    type: integer
                    example: 1
                  travelInterests:
                    type: array
                    items:
                      type: integer
                    example:
                      - 2
                      - 3
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    post:
      summary: Create travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example:
                    - 2
                    - 3
      responses:
        '201':
          description: Travel preference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '500':
          description: Server error
    put:
      summary: Update travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - travelInterests
              properties:
                userId:
                  type: integer
                  example: 1
                travelInterests:
                  type: array
                  items:
                    type: integer
                  example:
                    - 2
                    - 3
      responses:
        '200':
          description: Travel preference updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelPreference'
        '400':
          description: Invalid input
        '404':
          description: Travel preference not found
        '500':
          description: Server error
    delete:
      summary: Delete travel preference for user
      tags:
        - TravelPreferences
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel preference deleted
        '404':
          description: Travel preference not found
        '500':
          description: Server error
  /users/{userId}/itineraries:
    post:
      summary: Create itinerary for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - startDate
                - endDate
                - itineraryStatus
              properties:
                title:
                  type: string
                  example: Viagem para o Rio
                startDate:
                  type: string
                  format: date-time
                  example: '2025-07-01T09:00:00.000Z'
                endDate:
                  type: string
                  format: date-time
                  example: '2025-07-10T18:00:00.000Z'
                itineraryStatus:
                  type: string
                  enum:
                    - PLANNING
                    - IN_PROGRESS
                    - COMPLETED
                  example: PLANNING
                foodBudget:
                  type: number
                  format: float
                  example: 500
                lodgingBudget:
                  type: number
                  format: float
                  example: 1200
                totalBudget:
                  type: number
                  format: float
                  example: 2000
                userIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
                transportIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                activityIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
                destinationIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                requiredDocumentIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
      responses:
        '201':
          description: Itinerary created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all itineraries for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of itineraries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Itinerary'
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}:
    put:
      summary: Update itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItineraryInput'
      responses:
        '200':
          description: Itinerary updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - title
                  - startDate
                  - endDate
                  - itineraryStatus
                properties:
                  title:
                    type: string
<<<<<<< HEAD
                    example: Viagem para o Rio
                  startDate:
                    type: string
                    format: date-time
                    example: '2025-07-01T09:00:00.000Z'
                  endDate:
                    type: string
                    format: date-time
                    example: '2025-07-10T18:00:00.000Z'
                  itineraryStatus:
                    type: string
                    enum:
                      - PLANNING
                      - IN_PROGRESS
                      - COMPLETED
                    example: PLANNING
                  foodBudget:
                    type: number
                    format: float
                    example: 500
                  lodgingBudget:
                    type: number
                    format: float
                    example: 1200
                  totalBudget:
                    type: number
                    format: float
                    example: 2000
                  userIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                  transportIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                  activityIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                  destinationIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                  requiredDocumentIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
        '400':
          description: Invalid input
        '404':
          description: Itinerary not found
        '500':
          description: Server error
    delete:
      summary: Delete itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Itinerary deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '404':
          description: Itinerary not found
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}/activities:
    get:
      summary: Get all activities for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error
    post:
      summary: Create a new activity for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityInput'
      responses:
        '201':
          description: Activity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}/activities/{activityId}:
    put:
      summary: Update an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityInput'
      responses:
        '200':
          description: Activity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '404':
          description: Activity not found
        '500':
          description: Server error
    delete:
      summary: Delete an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Activity deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '404':
          description: Activity not found
        '500':
          description: Server error
  /travel-interests:
    get:
      summary: Get all travel interests
      tags:
        - TravelInterests
      responses:
        '200':
          description: List of travel interests
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - label
                  properties:
                    label:
                      type: string
                      example: Natureza
        '500':
          description: Server error
<<<<<<< HEAD
    post:
      summary: Create a new travel interest
      tags:
        - TravelInterests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelInterestInput'
      responses:
        '201':
          description: Travel interest created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /travel-interests/{id}:
=======
  /interests/{id}:
>>>>>>> 3ae82ba (Att yamls para rotas no swagger)
    get:
      summary: Get travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel interest found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '404':
=======
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel interest found
          content:
            application/json:
              schema:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    example: Natureza
        '404':
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
          description: Travel interest not found
        '500':
          description: Server error
    put:
      summary: Update travel interest by ID
<<<<<<< HEAD
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
=======
      operationId: updateTravelInterest
      tags:
        - TravelInterests
      parameters:
        - name: id
          in: path
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  type: string
                  example: Natureza
      responses:
        '200':
          description: Travel interest updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    example: Natureza
        '400':
          description: Invalid input
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    delete:
      summary: Delete travel interest by ID
<<<<<<< HEAD
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
=======
      operationId: deleteTravelInterest
      tags:
        - TravelInterests
      parameters:
        - name: id
          in: path
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel interest deleted
        '404':
          description: Travel interest not found
        '500':
          description: Server error
<<<<<<< HEAD
<<<<<<< HEAD
=======
  /itineraries/{userId}:
=======
=======
>>>>>>> 6930e63 (feat: adiciona documentação das rotas)
  /users/{userId}/itineraries:
>>>>>>> 3ae82ba (Att yamls para rotas no swagger)
    post:
      summary: Create itinerary for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - startDate
                - endDate
                - itineraryStatus
              properties:
                title:
                  type: string
                  example: Viagem para o Rio
                startDate:
                  type: string
                  format: date-time
                  example: '2025-07-01T09:00:00.000Z'
                endDate:
                  type: string
                  format: date-time
                  example: '2025-07-10T18:00:00.000Z'
                itineraryStatus:
                  type: string
                  enum:
                    - PLANNING
                    - IN_PROGRESS
                    - COMPLETED
                  example: PLANNING
                foodBudget:
                  type: number
                  format: float
                  example: 500
                lodgingBudget:
                  type: number
                  format: float
                  example: 1200
                totalBudget:
                  type: number
                  format: float
                  example: 2000
                userIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
                transportIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                activityIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
                destinationIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                requiredDocumentIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 1
                    - 2
      responses:
        '201':
          description: Itinerary created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      summary: Get all itineraries for user
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of itineraries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Itinerary'
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}:
    put:
      summary: Update itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItineraryInput'
      responses:
        '200':
          description: Itinerary updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - title
                  - startDate
                  - endDate
                  - itineraryStatus
                properties:
                  title:
                    type: string
                    example: Viagem para o Rio
                  startDate:
                    type: string
                    format: date-time
                    example: '2025-07-01T09:00:00.000Z'
                  endDate:
                    type: string
                    format: date-time
                    example: '2025-07-10T18:00:00.000Z'
                  itineraryStatus:
                    type: string
                    enum:
                      - PLANNING
                      - IN_PROGRESS
                      - COMPLETED
                    example: PLANNING
                  foodBudget:
                    type: number
                    format: float
                    example: 500
                  lodgingBudget:
                    type: number
                    format: float
                    example: 1200
                  totalBudget:
                    type: number
                    format: float
                    example: 2000
                  userIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                  transportIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                  activityIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                  destinationIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                  requiredDocumentIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
        '400':
          description: Invalid input
        '404':
          description: Itinerary not found
        '500':
          description: Server error
    delete:
      summary: Delete itinerary by ID
      tags:
        - Itineraries
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Itinerary deleted
<<<<<<< HEAD
        '404':
          description: Itinerary not found
        '500':
          description: Server error
<<<<<<< HEAD
>>>>>>> c7aa2df (Update prisma schema and add itinerary and activitys services+controller+router)
=======
  users/{userId}/itineraries/{itineraryId}/activities:
    post:
      summary: Create activity for itinerary
      operationId: createActivity
      tags:
        - Activities
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: itineraryId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - location
                - startTime
                - endTime
              properties:
                title:
                  type: string
                  example: Passeio de barco
                location:
                  type: string
                  example: Rio de Janeiro
                startTime:
                  type: string
                  format: date-time
                  example: '2025-07-02T09:00:00.000Z'
                endTime:
                  type: string
                  format: date-time
                  example: '2025-07-02T12:00:00.000Z'
                price:
                  type: number
                  format: float
                  example: 150
                duration:
                  type: string
                  example: 3h
                description:
                  type: string
                  example: Passeio de barco pela orla.
                destinationId:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Activity created
=======
>>>>>>> 6930e63 (feat: adiciona documentação das rotas)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '404':
          description: Itinerary not found
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}/activities:
    get:
      summary: Get all activities for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of activities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error
    post:
      summary: Create a new activity for an itinerary
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivityInput'
      responses:
        '201':
          description: Activity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /users/{userId}/itineraries/{itineraryId}/activities/{activityId}:
    put:
      summary: Update an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityInput'
      responses:
        '200':
          description: Activity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid input
        '404':
          description: Activity not found
        '500':
          description: Server error
    delete:
      summary: Delete an activity
      tags:
        - Activities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: path
          name: itineraryId
          required: true
          schema:
            type: integer
        - in: path
          name: activityId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Activity deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '404':
          description: Activity not found
        '500':
          description: Server error
  /travel-interests:
    get:
      summary: Get all travel interests
      tags:
        - TravelInterests
      responses:
        '200':
          description: List of travel interests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelInterest'
        '500':
          description: Server error
    post:
      summary: Create a new travel interest
      tags:
        - TravelInterests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTravelInterestInput'
      responses:
        '201':
          description: Travel interest created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '500':
          description: Server error
  /travel-interests/{id}:
    get:
      summary: Get travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Travel interest found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    put:
      summary: Update travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTravelInterestInput'
      responses:
        '200':
          description: Travel interest updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelInterest'
        '400':
          description: Invalid input
        '404':
          description: Travel interest not found
        '500':
          description: Server error
    delete:
      summary: Delete travel interest by ID
      tags:
        - TravelInterests
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Travel interest deleted
        '404':
          description: Travel interest not found
        '500':
          description: Server error
>>>>>>> 3ae82ba (Att yamls para rotas no swagger)
=======
                  user:
                    $ref: '#/components/schemas/User'

>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
          description: Updated user profile
          content:
            application/json:
              schema:
=======
>>>>>>> 90cb735086943d13bbbc35ca27617ddb4aa18211
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
<<<<<<< HEAD
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
=======
>>>>>>> 90cb735086943d13bbbc35ca27617ddb4aa18211
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        profileBio:
          type: string
          nullable: true
        profileImage:
          type: string
          nullable: true
    CreateUserInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
<<<<<<< HEAD
<<<<<<< HEAD
        createdAt:
          type: string
          format: date-time
        profileBio:
          type: string
        profileImage:
          type: string
          format: uri
    UpdateUserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        profileBio:
          type: string
        profileImage:
          type: string
          format: uri
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        profileBio:
          type: string
        profileImage:
          type: string
          format: uri
    CreateTravelPreferenceInput:
      type: object
      required:
        - userId
        - transport
        - accommodation
        - activities
      properties:
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    UpdateTravelPreferenceInput:
      type: object
      properties:
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    TravelPreference:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        transport:
          type: string
        accommodation:
          type: string
        activities:
          type: array
          items:
            type: string
        budget:
          type: number
        duration:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    CreateItineraryInput:
      type: object
      required:
        - title
        - startDate
        - endDate
        - itineraryStatus
      properties:
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
          enum:
            - PLANNING
            - IN_PROGRESS
            - COMPLETED
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer
    UpdateItineraryInput:
      type: object
      properties:
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
          enum:
            - PLANNING
            - IN_PROGRESS
            - COMPLETED
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer
    Itinerary:
=======
=======
>>>>>>> 90cb735086943d13bbbc35ca27617ddb4aa18211
        profileBio:
          type: string
          nullable: true
        profileImage:
          type: string
          nullable: true
    PlanoViagem:
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        itineraryStatus:
          type: string
        foodBudget:
          type: number
        lodgingBudget:
          type: number
        totalBudget:
          type: number
        userIds:
          type: array
          items:
<<<<<<< HEAD
            type: integer
        activityIds:
          type: array
          items:
            type: integer
        destinationIds:
          type: array
          items:
            type: integer
        transportIds:
          type: array
          items:
            type: integer
        requiredDocumentIds:
          type: array
          items:
            type: integer
    CreateActivityInput:
      type: object
      required:
        - location
        - title
        - price
        - startTime
        - endTime
        - itineraryId
      properties:
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string
        itineraryId:
          type: integer
    UpdateActivityInput:
      type: object
      properties:
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string
    Activity:
=======
            $ref: '#/components/schemas/User'
<<<<<<< HEAD

    User:
>>>>>>> 8ce8bcc (Implementação a US48 backend)
      type: object
      properties:
        id:
          type: integer
<<<<<<< HEAD
        location:
          type: string
        title:
          type: string
        price:
          type: number
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        duration:
          type: string
        description:
          type: string
        itineraryId:
          type: integer
    CreateTravelInterestInput:
      type: object
      required:
        - label
      properties:
        label:
          type: string
    UpdateTravelInterestInput:
      type: object
      properties:
        label:
          type: string
    TravelInterest:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string
=======
        name:
          type: string
        email:
          type: string
        profileBio:
          type: string
          nullable: true
        profileImage:
          type: string
          nullable: true

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
>>>>>>> 8ce8bcc (Implementação a US48 backend)
=======
>>>>>>> 00594f8 (Retirada do sistema de autenticacao para testar se precisa de usuario logado)
